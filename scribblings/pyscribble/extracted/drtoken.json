[["pydrnlp.drtoken", {"text": ["docstring", "Functions for filtering out uninteresting tokens."], "functions": [{"name": "boringPOS", "signature": {"parameters": [{"name": "str", "annotation": ["class", {"module": "builtins", "name": "str", "string": "<class 'str'>"}], "kind": "POSITIONAL_OR_KEYWORD", "default": false}], "return": ["class", {"module": "builtins", "name": "bool", "string": "<class 'bool'>"}]}, "ispredicate": false, "text": ["docstring", "The opposite of interestingPOS\n    "]}, {"name": "interestingPOS", "signature": {"parameters": [{"name": "str", "annotation": ["class", {"module": "builtins", "name": "str", "string": "<class 'str'>"}], "kind": "POSITIONAL_OR_KEYWORD", "default": false}], "return": ["class", {"module": "builtins", "name": "bool", "string": "<class 'bool'>"}]}, "ispredicate": false, "text": ["docstring", "Recognizes the interesting potential values from token.pos_\n\n Notable exclusions: \"NUM\"->numeral, \"SYM\"=>symbol\n\n\"pos\"/\"POS\" stands for \"Part of speach\""]}, {"name": "tokenFilterRevision", "signature": {"parameters": [], "return": ["named-annotation", {"module": "pydrnlp.drtoken", "name": "RevisionJsexpr", "string": "<pydrnlp.annotations._NamedAnnotation object at 0x10720d630>"}]}, "ispredicate": false, "text": false}, {"name": "tokenQuicklyFails", "signature": {"parameters": [{"name": "token", "annotation": ["class", {"module": "spacy.tokens.token", "name": "Token", "string": "<class 'spacy.tokens.token.Token'>"}], "kind": "POSITIONAL_OR_KEYWORD", "default": false}], "return": ["class", {"module": "builtins", "name": "bool", "string": "<class 'bool'>"}]}, "ispredicate": false, "text": ["docstring", "Predicate recognizing tokens which obviously should NOT be counted.\n\nSpecifically, recognizes tokens which are stop words, punctuation, \nor space, or which have an uninteresting part of speach tag\naccording to boringPOS.\n\nUsed to implement tokenShouldUse."]}, {"name": "tokenShouldUse", "signature": {"parameters": [{"name": "token", "annotation": ["class", {"module": "spacy.tokens.token", "name": "Token", "string": "<class 'spacy.tokens.token.Token'>"}], "kind": "POSITIONAL_OR_KEYWORD", "default": false}], "return": ["class", {"module": "builtins", "name": "bool", "string": "<class 'bool'>"}]}, "ispredicate": false, "text": ["docstring", "Predicate recognizing tokens which should be included in counting.\n\nIn addition to returning False for any token for which\ntokenQuicklyFails would return True,\nalso checks for the lemma and lowercase forms of the token\nin STOP_WORDSspacy.lang.en.stop_words. \nThis is needed because token.is_stop seems to be False\nwhen the token itself is not a stop word, even if\na more normalized form might be.\n\nMaybe there is opportunity for optimization here?\nIn most cases, both token.lemma_ and token.lower_\nare in STOP_WORDS if either of them is.\nIt seems to be very rare for only token.lower_\nto be in STOP_WORDS. Investigate further."]}], "named-annotations": [{"name": "RevisionJsexpr", "module": "pydrnlp.drtoken", "value": {"name": "RevisionJsexpr", "docstring": false, "value": ["annotation-constructor", {"module": "pydrnlp.annotations", "name": "And", "args": [["named-annotation", {"module": "pydrnlp.mkdoc", "name": "JSON", "string": "<pydrnlp.annotations._NamedAnnotation object at 0x10b466eb8>"}], ["annotation-constructor", {"module": "pydrnlp.annotations", "name": "Not", "args": [["False"]]}]]}]}}], "classes": []}]]
