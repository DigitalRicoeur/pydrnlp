[["pydrnlp.mkdoc", {"text": ["docstring", "Library for extracting Python documentation and rendering to JSON.\n\nThe functions in this library extract documentation from\nPython modules and render it to a structured JSON format.\nIt primarily relies on docstrings and annotations to build\nthe documentation, including the special annotations from\npydrnlp.annotations.\n\nDocumentation is currently extracted for functions, classes,\nand named annotations, as well as the module as a whole.\n\nThe primary entry point to the library is docModpath(),\nthough docMod() is also a viable choice.\nThe interactive command-line behavior is encapsulated in run().\n\nThe resulting JSON data should be convertable to a Scribble document.\n\nTODO: Need to determine if running this module as __main__\ncauses bootstrapping issues for its named annotations etc."], "functions": [{"name": "_docClasses", "signature": {"parameters": [{"name": "mod", "annotation": ["function", {"module": "inspect", "name": "ismodule"}], "kind": "POSITIONAL_OR_KEYWORD", "default": false}], "return": ["annotation-constructor", {"module": "pydrnlp.annotations", "name": "IteratorOf", "args": [["dict", [[["string", "name"], ["class", {"module": "builtins", "name": "str", "string": "<class 'str'>"}]], [["string", "signature"], ["named-annotation", {"module": "pydrnlp.mkdoc", "name": "SignatureDoc", "string": "SignatureDoc"}]], [["string", "isSpecialAnnotationClass"], ["annotation-constructor", {"module": "pydrnlp.annotations", "name": "Or", "args": [["False"], ["string", "annotation-constructor"], ["string", "special-annotation"]]}]], [["string", "text"], ["annotation-constructor", {"module": "pydrnlp.annotations", "name": "Or", "args": [["False"], ["list", [["string", "comments"], ["class", {"module": "builtins", "name": "str", "string": "<class 'str'>"}]]], ["list", [["string", "docstring"], ["class", {"module": "builtins", "name": "str", "string": "<class 'str'>"}]]]]}]]]]]}]}, "ispredicate": false, "text": ["docstring", "Like _docNamedAnnotations, but for classes."]}, {"name": "_docFunctions", "signature": {"parameters": [{"name": "mod", "annotation": ["function", {"module": "inspect", "name": "ismodule"}], "kind": "POSITIONAL_OR_KEYWORD", "default": false}], "return": ["annotation-constructor", {"module": "pydrnlp.annotations", "name": "IteratorOf", "args": [["dict", [[["string", "name"], ["class", {"module": "builtins", "name": "str", "string": "<class 'str'>"}]], [["string", "signature"], ["named-annotation", {"module": "pydrnlp.mkdoc", "name": "SignatureDoc", "string": "SignatureDoc"}]], [["string", "ispredicate"], ["class", {"module": "builtins", "name": "bool", "string": "<class 'bool'>"}]], [["string", "text"], ["annotation-constructor", {"module": "pydrnlp.annotations", "name": "Or", "args": [["False"], ["list", [["string", "comments"], ["class", {"module": "builtins", "name": "str", "string": "<class 'str'>"}]]], ["list", [["string", "docstring"], ["class", {"module": "builtins", "name": "str", "string": "<class 'str'>"}]]]]}]]]]]}]}, "ispredicate": false, "text": ["docstring", "Like _docNamedAnnotations, but for functions."]}, {"name": "_docNamedAnnotations", "signature": {"parameters": [{"name": "mod", "annotation": ["function", {"module": "inspect", "name": "ismodule"}], "kind": "POSITIONAL_OR_KEYWORD", "default": false}], "return": ["annotation-constructor", {"module": "pydrnlp.annotations", "name": "IteratorOf", "args": [["dict", [[["string", "name"], ["class", {"module": "builtins", "name": "str", "string": "<class 'str'>"}]], [["string", "module"], ["class", {"module": "builtins", "name": "str", "string": "<class 'str'>"}]], [["string", "value"], ["named-annotation", {"module": "pydrnlp.annotations", "name": "NamedAnnotationDefinitionDoc", "string": "NamedAnnotationDefinitionDoc"}]]]]]}]}, "ispredicate": false, "text": ["docstring", "Extracts documentation for the named annotations from mod.\n\nThe documented values are filtered as with _getNamedAnnotations."]}, {"name": "_docReturn", "signature": {"parameters": [{"name": "return_ann", "annotation": ["function", {"module": "pydrnlp.annotations", "name": "Any"}], "kind": "POSITIONAL_OR_KEYWORD", "default": false}], "return": ["annotation-constructor", {"module": "pydrnlp.annotations", "name": "Or", "args": [["False"], ["named-annotation", {"module": "pydrnlp.annotations", "name": "AnnotationDoc", "string": "AnnotationDoc"}]]}]}, "ispredicate": false, "text": ["docstring", "Used to implement docSignature"]}, {"name": "_getClasses", "signature": {"parameters": [{"name": "mod", "annotation": ["function", {"module": "inspect", "name": "ismodule"}], "kind": "POSITIONAL_OR_KEYWORD", "default": false}], "return": ["annotation-constructor", {"module": "pydrnlp.annotations", "name": "DictOf", "args": [["class", {"module": "builtins", "name": "str", "string": "<class 'str'>"}], ["function", {"module": "inspect", "name": "isclass"}]]}]}, "ispredicate": false, "text": ["docstring", "Like _getFunctions, but for classes"]}, {"name": "_getFunctions", "signature": {"parameters": [{"name": "mod", "annotation": ["function", {"module": "inspect", "name": "ismodule"}], "kind": "POSITIONAL_OR_KEYWORD", "default": false}], "return": ["annotation-constructor", {"module": "pydrnlp.annotations", "name": "DictOf", "args": [["class", {"module": "builtins", "name": "str", "string": "<class 'str'>"}], ["function", {"module": "inspect", "name": "isfunction"}]]}]}, "ispredicate": false, "text": ["docstring", "Extracts the members of mod that are functions.\n\nThe raw listing is filtered to eliminate values \nimported from other modules and to respect @NoDoc."]}, {"name": "_getNamedAnnotations", "signature": {"parameters": [{"name": "mod", "annotation": ["function", {"module": "inspect", "name": "ismodule"}], "kind": "POSITIONAL_OR_KEYWORD", "default": false}], "return": ["annotation-constructor", {"module": "pydrnlp.annotations", "name": "DictOf", "args": [["class", {"module": "builtins", "name": "str", "string": "<class 'str'>"}], ["function", {"module": "pydrnlp.annotations", "name": "isNamedAnnotation"}]]}]}, "ispredicate": false, "text": ["docstring", "Like _getFunctions, but for named annotations\n(which require a fairly different implementation)."]}, {"name": "docMod", "signature": {"parameters": [{"name": "mod", "annotation": ["function", {"module": "inspect", "name": "ismodule"}], "kind": "POSITIONAL_OR_KEYWORD", "default": false}], "return": ["dict", [[["string", "text"], ["annotation-constructor", {"module": "pydrnlp.annotations", "name": "Or", "args": [["False"], ["list", [["string", "comments"], ["class", {"module": "builtins", "name": "str", "string": "<class 'str'>"}]]], ["list", [["string", "docstring"], ["class", {"module": "builtins", "name": "str", "string": "<class 'str'>"}]]]]}]], [["string", "functions"], ["annotation-constructor", {"module": "pydrnlp.annotations", "name": "ListOf", "args": [["dict", [[["string", "name"], ["class", {"module": "builtins", "name": "str", "string": "<class 'str'>"}]], [["string", "signature"], ["named-annotation", {"module": "pydrnlp.mkdoc", "name": "SignatureDoc", "string": "SignatureDoc"}]], [["string", "ispredicate"], ["class", {"module": "builtins", "name": "bool", "string": "<class 'bool'>"}]], [["string", "text"], ["annotation-constructor", {"module": "pydrnlp.annotations", "name": "Or", "args": [["False"], ["list", [["string", "comments"], ["class", {"module": "builtins", "name": "str", "string": "<class 'str'>"}]]], ["list", [["string", "docstring"], ["class", {"module": "builtins", "name": "str", "string": "<class 'str'>"}]]]]}]]]]]}]], [["string", "named-annotations"], ["annotation-constructor", {"module": "pydrnlp.annotations", "name": "ListOf", "args": [["dict", [[["string", "name"], ["class", {"module": "builtins", "name": "str", "string": "<class 'str'>"}]], [["string", "module"], ["class", {"module": "builtins", "name": "str", "string": "<class 'str'>"}]], [["string", "value"], ["named-annotation", {"module": "pydrnlp.annotations", "name": "NamedAnnotationDefinitionDoc", "string": "NamedAnnotationDefinitionDoc"}]]]]]}]], [["string", "classes"], ["annotation-constructor", {"module": "pydrnlp.annotations", "name": "ListOf", "args": [["dict", [[["string", "name"], ["class", {"module": "builtins", "name": "str", "string": "<class 'str'>"}]], [["string", "signature"], ["named-annotation", {"module": "pydrnlp.mkdoc", "name": "SignatureDoc", "string": "SignatureDoc"}]], [["string", "isSpecialAnnotationClass"], ["annotation-constructor", {"module": "pydrnlp.annotations", "name": "Or", "args": [["False"], ["string", "annotation-constructor"], ["string", "special-annotation"]]}]], [["string", "text"], ["annotation-constructor", {"module": "pydrnlp.annotations", "name": "Or", "args": [["False"], ["list", [["string", "comments"], ["class", {"module": "builtins", "name": "str", "string": "<class 'str'>"}]]], ["list", [["string", "docstring"], ["class", {"module": "builtins", "name": "str", "string": "<class 'str'>"}]]]]}]]]]]}]]]]}, "ispredicate": false, "text": ["docstring", "Like docModpath, but operates on a module object.\n    "]}, {"name": "docModpath", "signature": {"parameters": [{"name": "modpath", "annotation": ["class", {"module": "builtins", "name": "str", "string": "<class 'str'>"}], "kind": "POSITIONAL_OR_KEYWORD", "default": false}], "return": ["list", [["class", {"module": "builtins", "name": "str", "string": "<class 'str'>"}], ["annotation-constructor", {"module": "pydrnlp.annotations", "name": "Or", "args": [["False"], ["string", "ErrorDuringImport"], ["dict", [[["string", "text"], ["annotation-constructor", {"module": "pydrnlp.annotations", "name": "Or", "args": [["False"], ["list", [["string", "comments"], ["class", {"module": "builtins", "name": "str", "string": "<class 'str'>"}]]], ["list", [["string", "docstring"], ["class", {"module": "builtins", "name": "str", "string": "<class 'str'>"}]]]]}]], [["string", "functions"], ["annotation-constructor", {"module": "pydrnlp.annotations", "name": "ListOf", "args": [["dict", [[["string", "name"], ["class", {"module": "builtins", "name": "str", "string": "<class 'str'>"}]], [["string", "signature"], ["named-annotation", {"module": "pydrnlp.mkdoc", "name": "SignatureDoc", "string": "SignatureDoc"}]], [["string", "ispredicate"], ["class", {"module": "builtins", "name": "bool", "string": "<class 'bool'>"}]], [["string", "text"], ["annotation-constructor", {"module": "pydrnlp.annotations", "name": "Or", "args": [["False"], ["list", [["string", "comments"], ["class", {"module": "builtins", "name": "str", "string": "<class 'str'>"}]]], ["list", [["string", "docstring"], ["class", {"module": "builtins", "name": "str", "string": "<class 'str'>"}]]]]}]]]]]}]], [["string", "named-annotations"], ["annotation-constructor", {"module": "pydrnlp.annotations", "name": "ListOf", "args": [["dict", [[["string", "name"], ["class", {"module": "builtins", "name": "str", "string": "<class 'str'>"}]], [["string", "module"], ["class", {"module": "builtins", "name": "str", "string": "<class 'str'>"}]], [["string", "value"], ["named-annotation", {"module": "pydrnlp.annotations", "name": "NamedAnnotationDefinitionDoc", "string": "NamedAnnotationDefinitionDoc"}]]]]]}]], [["string", "classes"], ["annotation-constructor", {"module": "pydrnlp.annotations", "name": "ListOf", "args": [["dict", [[["string", "name"], ["class", {"module": "builtins", "name": "str", "string": "<class 'str'>"}]], [["string", "signature"], ["named-annotation", {"module": "pydrnlp.mkdoc", "name": "SignatureDoc", "string": "SignatureDoc"}]], [["string", "isSpecialAnnotationClass"], ["annotation-constructor", {"module": "pydrnlp.annotations", "name": "Or", "args": [["False"], ["string", "annotation-constructor"], ["string", "special-annotation"]]}]], [["string", "text"], ["annotation-constructor", {"module": "pydrnlp.annotations", "name": "Or", "args": [["False"], ["list", [["string", "comments"], ["class", {"module": "builtins", "name": "str", "string": "<class 'str'>"}]]], ["list", [["string", "docstring"], ["class", {"module": "builtins", "name": "str", "string": "<class 'str'>"}]]]]}]]]]]}]]]]]}]]]}, "ispredicate": false, "text": ["docstring", "Extracts documentation from the module at the given modpath.\n\nThe first element of the ModpathDoc is always the given modpath.\nThe second element might be False, meaning that the module\nwas not found, or \"ErrorDuringImport\", meaning that the module\nwas found, but an exception occured while trying to run it to \nobtain a module object."]}, {"name": "docParameters", "signature": {"parameters": [{"name": "params", "annotation": ["annotation-constructor", {"module": "pydrnlp.annotations", "name": "DictOf", "args": [["class", {"module": "builtins", "name": "str", "string": "<class 'str'>"}], ["class", {"module": "inspect", "name": "Parameter", "string": "<class 'inspect.Parameter'>"}]]}], "kind": "POSITIONAL_OR_KEYWORD", "default": false}], "return": ["annotation-constructor", {"module": "pydrnlp.annotations", "name": "IteratorOf", "args": [["dict", [[["string", "name"], ["class", {"module": "builtins", "name": "str", "string": "<class 'str'>"}]], [["string", "annotation"], ["annotation-constructor", {"module": "pydrnlp.annotations", "name": "Or", "args": [["False"], ["named-annotation", {"module": "pydrnlp.annotations", "name": "AnnotationDoc", "string": "AnnotationDoc"}]]}]], [["string", "kind"], ["annotation-constructor", {"module": "pydrnlp.annotations", "name": "Or", "args": [["string", "POSITIONAL_ONLY"], ["string", "POSITIONAL_OR_KEYWORD"], ["string", "VAR_POSITIONAL"], ["string", "KEYWORD_ONLY"], ["string", "VAR_KEYWORD"], ["False"]]}]], [["string", "default"], ["annotation-constructor", {"module": "pydrnlp.annotations", "name": "Or", "args": [["False"], ["class", {"module": "builtins", "name": "str", "string": "<class 'str'>"}]]}]]]]]}]}, "ispredicate": false, "text": ["docstring", "Extracts documentation for parameters from a signature object.\n\nThe \"annotation\" field may be False if no annotation was provided:\notherwise, it will be a pydrnlp.annotations.AnnotationDoc.\n\nThe \"default\" field will be False if there is no default\nvalue for that argument: otherwise, it is the default\nvalue converted to string form.\n\nThe \"kind\" field will only be False if the raw kind value is\nunknown, which should likely trigger an exception in higher-level\ncode. (Currently, this is deferred to the Racket side.)"]}, {"name": "docSignature", "signature": {"parameters": [{"name": "proc", "annotation": ["function", {"module": "pydrnlp.annotations", "name": "Any"}], "kind": "POSITIONAL_OR_KEYWORD", "default": false}], "return": ["named-annotation", {"module": "pydrnlp.mkdoc", "name": "SignatureDoc", "string": "SignatureDoc"}]}, "ispredicate": false, "text": ["docstring", "Tries to extract documentation about the signature\nof the given object.\n\nThe result may be \"TypeError\" if the given object\ndoes not support signatures or \"ValueError\" if it does,\nbut no signature could be found.\nOtherwise, the dictionary gives information about the \nparameters and return annotation.\nThe return annotation may be False to indicate that no\nannotation was provided: otherwise, it will be a \npydrnlp.annotations.AnnotationDoc."]}, {"name": "dumpln", "signature": {"parameters": [{"name": "jsOut", "annotation": ["named-annotation", {"module": "pydrnlp.mkdoc", "name": "JSON", "string": "JSON"}], "kind": "POSITIONAL_OR_KEYWORD", "default": false}], "return": ["None"]}, "ispredicate": false, "text": ["docstring", "Writes jsOut to standard output as JSON, \nfollowed by a newline."]}, {"name": "getDocText", "signature": {"parameters": [{"name": "obj", "annotation": ["function", {"module": "pydrnlp.annotations", "name": "Any"}], "kind": "POSITIONAL_OR_KEYWORD", "default": false}], "return": ["annotation-constructor", {"module": "pydrnlp.annotations", "name": "Or", "args": [["False"], ["list", [["string", "comments"], ["class", {"module": "builtins", "name": "str", "string": "<class 'str'>"}]]], ["list", [["string", "docstring"], ["class", {"module": "builtins", "name": "str", "string": "<class 'str'>"}]]]]}]}, "ispredicate": false, "text": ["docstring", "Attempts to get some text documenting obj.\n\nThe result is tagged based on what was obtained:\ngetDocText() first tries to get a docstring,\nthen tries to extract source-code comments near\nthe definition of the object.\nIf both options fail or return empty strings,\nreturns False."]}, {"name": "run", "signature": {"parameters": [], "return": ["None"]}, "ispredicate": false, "text": ["docstring", "Implements the command-line interface.\n\nCalled when \u0192pyflow{__name__ == \"__main__\"}."]}], "named-annotations": [{"name": "JSON", "module": "pydrnlp.mkdoc", "value": {"name": "JSON", "docstring": "An annotation for values that can be converted to or from\n    JSON by the json module.\n    ", "value": ["singleton"]}}, {"name": "SignatureDoc", "module": "pydrnlp.mkdoc", "value": {"name": "SignatureDoc", "docstring": false, "value": ["annotation-constructor", {"module": "pydrnlp.annotations", "name": "Or", "args": [["dict", [[["string", "parameters"], ["annotation-constructor", {"module": "pydrnlp.annotations", "name": "ListOf", "args": [["dict", [[["string", "name"], ["class", {"module": "builtins", "name": "str", "string": "<class 'str'>"}]], [["string", "annotation"], ["annotation-constructor", {"module": "pydrnlp.annotations", "name": "Or", "args": [["False"], ["named-annotation", {"module": "pydrnlp.annotations", "name": "AnnotationDoc", "string": "AnnotationDoc"}]]}]], [["string", "kind"], ["annotation-constructor", {"module": "pydrnlp.annotations", "name": "Or", "args": [["string", "POSITIONAL_ONLY"], ["string", "POSITIONAL_OR_KEYWORD"], ["string", "VAR_POSITIONAL"], ["string", "KEYWORD_ONLY"], ["string", "VAR_KEYWORD"], ["False"]]}]], [["string", "default"], ["annotation-constructor", {"module": "pydrnlp.annotations", "name": "Or", "args": [["False"], ["class", {"module": "builtins", "name": "str", "string": "<class 'str'>"}]]}]]]]]}]], [["string", "return"], ["annotation-constructor", {"module": "pydrnlp.annotations", "name": "Or", "args": [["False"], ["named-annotation", {"module": "pydrnlp.annotations", "name": "AnnotationDoc", "string": "AnnotationDoc"}]]}]]]], ["string", "ValueError"], ["string", "TypeError"]]}]}}], "classes": []}]]
