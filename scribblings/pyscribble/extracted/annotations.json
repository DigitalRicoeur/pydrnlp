[["pydrnlp.annotations", {"text": ["docstring", "Special annotations that support rendering in documentation."], "functions": [{"name": "Any", "signature": {"parameters": [{"name": "any", "annotation": ["function", {"module": "pydrnlp.annotations", "name": "Any"}], "kind": "POSITIONAL_OR_KEYWORD", "default": false}], "return": ["class", {"module": "builtins", "name": "bool", "string": "<class 'bool'>"}]}, "ispredicate": true, "text": ["docstring", "Accepts all Python values.\n    "]}, {"name": "NoDoc", "signature": {"parameters": [{"name": "any", "annotation": ["function", {"module": "pydrnlp.annotations", "name": "Any"}], "kind": "POSITIONAL_OR_KEYWORD", "default": false}], "return": ["function", {"module": "pydrnlp.annotations", "name": "Any"}]}, "ispredicate": false, "text": ["docstring", "Causes its argument not to be included in documentation.\n\nNoDoc returns its argument unchanged for convienient\nuse as a decorator."]}, {"name": "Predicate", "signature": {"parameters": [{"name": "proc", "annotation": ["function", {"module": "pydrnlp.annotations", "name": "Any"}], "kind": "POSITIONAL_OR_KEYWORD", "default": false}], "return": ["function", {"module": "pydrnlp.annotations", "name": "Any"}]}, "ispredicate": false, "text": ["docstring", "Declares that its argument is a predicate function.\n\nFunctions registered with Predicate will be documented\nas annotations.\nPredicate functions that have not been registered with \nPredicate can still be used as annotations in exactly the same\nway: the only effect of Predicate is to change the section\nin which the function will be documented.\n\nPredicate returns its argument unchanged for convienient\nuse as a decorator."]}, {"name": "docAnnotation", "signature": {"parameters": [{"name": "ann", "annotation": ["function", {"module": "pydrnlp.annotations", "name": "Any"}], "kind": "POSITIONAL_OR_KEYWORD", "default": false}], "return": ["named-annotation", {"module": "pydrnlp.annotations", "name": "AnnotationDoc", "string": "AnnotationDoc"}]}, "ispredicate": false, "text": ["docstring", "Extracts structured, JSON-convertable documentation\nfor an annotation.\n\nSee also pydrnlp.mkdoc."]}, {"name": "getModName", "signature": {"parameters": [{"name": "any", "annotation": ["function", {"module": "pydrnlp.annotations", "name": "Any"}], "kind": "POSITIONAL_OR_KEYWORD", "default": false}], "return": ["annotation-constructor", {"module": "pydrnlp.annotations", "name": "Or", "args": [["class", {"module": "builtins", "name": "str", "string": "<class 'str'>"}], ["False"]]}]}, "ispredicate": false, "text": false}, {"name": "isNamedAnnotation", "signature": {"parameters": [{"name": "any", "annotation": ["function", {"module": "pydrnlp.annotations", "name": "Any"}], "kind": "POSITIONAL_OR_KEYWORD", "default": false}], "return": ["class", {"module": "builtins", "name": "bool", "string": "<class 'bool'>"}]}, "ispredicate": false, "text": ["docstring", "Recognizes named annotations.\n    "]}, {"name": "isSpecialAnnotation", "signature": {"parameters": [{"name": "any", "annotation": ["function", {"module": "pydrnlp.annotations", "name": "Any"}], "kind": "POSITIONAL_OR_KEYWORD", "default": false}], "return": ["class", {"module": "builtins", "name": "bool", "string": "<class 'bool'>"}]}, "ispredicate": false, "text": ["docstring", "Recognizes special annotation values.\n    "]}, {"name": "isSpecialAnnotationClass", "signature": {"parameters": [{"name": "cls", "annotation": ["function", {"module": "pydrnlp.annotations", "name": "Any"}], "kind": "POSITIONAL_OR_KEYWORD", "default": false}], "return": ["annotation-constructor", {"module": "pydrnlp.annotations", "name": "Or", "args": [["False"], ["string", "annotation-constructor"], ["string", "special-annotation"]]}]}, "ispredicate": false, "text": ["docstring", "Recognizes classes the instances of which are special annotations.\n\nAnnotation constructor classes produce the more specific\nresult \"annotation-constructor\"."]}, {"name": "ispredicate", "signature": {"parameters": [{"name": "any", "annotation": ["function", {"module": "pydrnlp.annotations", "name": "Any"}], "kind": "POSITIONAL_OR_KEYWORD", "default": false}], "return": ["class", {"module": "builtins", "name": "bool", "string": "<class 'bool'>"}]}, "ispredicate": false, "text": ["docstring", "Recognizes arguments which have been redistered with Predicate.\n    "]}, {"name": "maybeShouldDoc", "signature": {"parameters": [{"name": "any", "annotation": ["function", {"module": "pydrnlp.annotations", "name": "Any"}], "kind": "POSITIONAL_OR_KEYWORD", "default": false}], "return": ["class", {"module": "builtins", "name": "bool", "string": "<class 'bool'>"}]}, "ispredicate": false, "text": ["docstring", "Returns True unless the argument has been registered with NoDoc.\n\nA True result doesn't mean the argument should definitely be\ndocumented \u2014 it might not be a type of thing that should ever\nbe documented, or it might not be from the right module \u2014 \nbut a False result definitively means the argument should never\nbe documented: hence the name."]}], "named-annotations": [{"name": "AnnotationDoc", "module": "pydrnlp.annotations", "value": {"name": "AnnotationDoc", "docstring": false, "value": ["annotation-constructor", {"module": "pydrnlp.annotations", "name": "Or", "args": [["named-annotation", {"module": "pydrnlp.annotations", "name": "_NamedAnnotationUseDoc", "string": "_NamedAnnotationUseDoc"}], ["named-annotation", {"module": "pydrnlp.annotations", "name": "_AnnotationConstructorDoc", "string": "_AnnotationConstructorDoc"}], ["list", [["string", "class"], ["dict", [[["string", "module"], ["class", {"module": "builtins", "name": "str", "string": "<class 'str'>"}]], [["string", "name"], ["class", {"module": "builtins", "name": "str", "string": "<class 'str'>"}]], [["string", "string"], ["class", {"module": "builtins", "name": "str", "string": "<class 'str'>"}]]]]]], ["list", [["string", "function"], ["dict", [[["string", "module"], ["class", {"module": "builtins", "name": "str", "string": "<class 'str'>"}]], [["string", "name"], ["class", {"module": "builtins", "name": "str", "string": "<class 'str'>"}]]]]]], ["list", [["annotation-constructor", {"module": "pydrnlp.annotations", "name": "Or", "args": [["string", "dict"], ["string", "list"], ["string", "tuple"]]}], ["annotation-constructor", {"module": "pydrnlp.annotations", "name": "ListOf", "args": [["named-annotation", {"module": "pydrnlp.annotations", "name": "AnnotationDoc", "string": "AnnotationDoc"}]]}]]], ["annotation-constructor", {"module": "pydrnlp.annotations", "name": "Or", "args": [["list", [["string", "True"]]], ["list", [["string", "False"]]], ["list", [["string", "None"]]], ["list", [["string", "string"], ["class", {"module": "builtins", "name": "str", "string": "<class 'str'>"}]]], ["list", [["string", "number"], ["annotation-constructor", {"module": "pydrnlp.annotations", "name": "Or", "args": [["class", {"module": "builtins", "name": "int", "string": "<class 'int'>"}], ["class", {"module": "builtins", "name": "float", "string": "<class 'float'>"}]]}]]], ["list", [["string", "other"], ["class", {"module": "builtins", "name": "str", "string": "<class 'str'>"}]]]]}]]}]}}, {"name": "NamedAnnotationDefinitionInsideDoc", "module": "pydrnlp.annotations", "value": {"name": "NamedAnnotationDefinitionDoc", "docstring": false, "value": ["dict", [[["string", "name"], ["class", {"module": "builtins", "name": "str", "string": "<class 'str'>"}]], [["string", "docstring"], ["annotation-constructor", {"module": "pydrnlp.annotations", "name": "Or", "args": [["class", {"module": "builtins", "name": "str", "string": "<class 'str'>"}], ["False"]]}]], [["string", "value"], ["annotation-constructor", {"module": "pydrnlp.annotations", "name": "Or", "args": [["list", [["string", "singleton"]]], ["named-annotation", {"module": "pydrnlp.annotations", "name": "AnnotationDoc", "string": "AnnotationDoc"}]]}]]]]}}, {"name": "_AnnotationConstructorDoc", "module": "pydrnlp.annotations", "value": {"name": "_AnnotationConstructorDoc", "docstring": false, "value": ["list", [["string", "annotation-constructor"], ["dict", [[["string", "module"], ["class", {"module": "builtins", "name": "str", "string": "<class 'str'>"}]], [["string", "name"], ["class", {"module": "builtins", "name": "str", "string": "<class 'str'>"}]], [["string", "args"], ["annotation-constructor", {"module": "pydrnlp.annotations", "name": "ListOf", "args": [["named-annotation", {"module": "pydrnlp.annotations", "name": "AnnotationDoc", "string": "AnnotationDoc"}]]}]]]]]]}}, {"name": "_NamedAnnotationUseDoc", "module": "pydrnlp.annotations", "value": {"name": "_NamedAnnotationUseDoc", "docstring": false, "value": ["list", [["string", "named-annotation"], ["dict", [[["string", "module"], ["class", {"module": "builtins", "name": "str", "string": "<class 'str'>"}]], [["string", "name"], ["class", {"module": "builtins", "name": "str", "string": "<class 'str'>"}]], [["string", "string"], ["class", {"module": "builtins", "name": "str", "string": "<class 'str'>"}]]]]]]}}], "classes": [{"name": "And", "signature": {"parameters": [{"name": "args", "annotation": ["function", {"module": "pydrnlp.annotations", "name": "Any"}], "kind": "VAR_POSITIONAL", "default": false}], "return": false}, "isSpecialAnnotationClass": "annotation-constructor", "text": ["docstring", "An annotation constructor for the intersection of the \nargs annotations.\n\nThe And annotation is satisfied if and only if all of \nits args annotations are satisfied."]}, {"name": "DictOf", "signature": {"parameters": [{"name": "key", "annotation": ["function", {"module": "pydrnlp.annotations", "name": "Any"}], "kind": "POSITIONAL_OR_KEYWORD", "default": false}, {"name": "value", "annotation": ["function", {"module": "pydrnlp.annotations", "name": "Any"}], "kind": "POSITIONAL_OR_KEYWORD", "default": false}], "return": false}, "isSpecialAnnotationClass": "annotation-constructor", "text": ["docstring", "An annotation constructor for dictionaries where the keys\nmatch the key annotation and the values match the value annotation."]}, {"name": "IteratorOf", "signature": {"parameters": [{"name": "inner", "annotation": ["function", {"module": "pydrnlp.annotations", "name": "Any"}], "kind": "POSITIONAL_OR_KEYWORD", "default": false}], "return": false}, "isSpecialAnnotationClass": "annotation-constructor", "text": ["docstring", "An annotation constructor for iterators whose elements\nsatisfy the inner annotation."]}, {"name": "LazyAnnotation", "signature": {"parameters": [{"name": "thunk", "annotation": ["annotation-constructor", {"module": "pydrnlp.annotations", "name": "ThunkOf", "args": [["function", {"module": "pydrnlp.annotations", "name": "Any"}]]}], "kind": "POSITIONAL_OR_KEYWORD", "default": false}], "return": false}, "isSpecialAnnotationClass": "special-annotation", "text": ["docstring", "A special annotation that delays the evaluation of its value.\n\nUseful for defining recursive annotations.\n\nA LazyAnnotation is completely transparent: it effectively\nreplaces itself by the annotation value returned by the thunk.\nThe thunk is guaranteed to be called at most once."]}, {"name": "ListOf", "signature": {"parameters": [{"name": "inner", "annotation": ["function", {"module": "pydrnlp.annotations", "name": "Any"}], "kind": "POSITIONAL_OR_KEYWORD", "default": false}], "return": false}, "isSpecialAnnotationClass": "annotation-constructor", "text": ["docstring", "An annotation constructor for lists whose elements\nsatisfy the inner annotation."]}, {"name": "ModuleAnnotationNamer", "signature": {"parameters": [{"name": "modName", "annotation": ["class", {"module": "builtins", "name": "str", "string": "<class 'str'>"}], "kind": "POSITIONAL_OR_KEYWORD", "default": false}], "return": false}, "isSpecialAnnotationClass": false, "text": ["docstring", "Create an instance of ModuleAnnotationNamer to construct\nnamed annotations for a particular module.\n\nThis should generally be used in a declaration like:\n_NamedAnnotation = ModuleAnnotationNamer(__name__)\n\nTODO: explain __call__ vs singleton."]}, {"name": "Not", "signature": {"parameters": [{"name": "inner", "annotation": ["function", {"module": "pydrnlp.annotations", "name": "Any"}], "kind": "POSITIONAL_OR_KEYWORD", "default": false}], "return": false}, "isSpecialAnnotationClass": "annotation-constructor", "text": ["docstring", "An annotation constructor that is satisfied if and only if\nits inner annotation is \u0192b{not} satisfied."]}, {"name": "Or", "signature": {"parameters": [{"name": "args", "annotation": ["function", {"module": "pydrnlp.annotations", "name": "Any"}], "kind": "VAR_POSITIONAL", "default": false}], "return": false}, "isSpecialAnnotationClass": "annotation-constructor", "text": ["docstring", "An annotation constructor for the union of the \nargs annotations.\n\nThe Or annotation is satisfied if any of its args \nannotations are satisfied."]}, {"name": "ThunkOf", "signature": {"parameters": [{"name": "rslt", "annotation": ["function", {"module": "pydrnlp.annotations", "name": "Any"}], "kind": "POSITIONAL_OR_KEYWORD", "default": false}], "return": false}, "isSpecialAnnotationClass": "annotation-constructor", "text": ["docstring", "An annotation constructor for functions of no arguments\nwhere the result satisfies rslt."]}, {"name": "_AbstractAnnotationConstructor", "signature": {"parameters": [{"name": "args", "annotation": ["annotation-constructor", {"module": "pydrnlp.annotations", "name": "IteratorOf", "args": [["function", {"module": "pydrnlp.annotations", "name": "Any"}]]}], "kind": "POSITIONAL_OR_KEYWORD", "default": false}], "return": false}, "isSpecialAnnotationClass": "annotation-constructor", "text": ["docstring", "Annotation constructors are subclasses of this class.\n    "]}, {"name": "_AbstractSpecialAnnotation", "signature": {"parameters": [], "return": false}, "isSpecialAnnotationClass": "special-annotation", "text": ["docstring", "Abstract base class for special annotations.\n\nYou probably shouldn't use this.\nSee also isSpecialAnnotation."]}, {"name": "_NamedAnnotation", "signature": {"parameters": [{"name": "modName", "annotation": ["class", {"module": "builtins", "name": "str", "string": "<class 'str'>"}], "kind": "POSITIONAL_OR_KEYWORD", "default": false}, {"name": "name", "annotation": ["class", {"module": "builtins", "name": "str", "string": "<class 'str'>"}], "kind": "POSITIONAL_OR_KEYWORD", "default": false}, {"name": "value", "annotation": ["function", {"module": "pydrnlp.annotations", "name": "Any"}], "kind": "POSITIONAL_OR_KEYWORD", "default": false}, {"name": "docstring", "annotation": ["annotation-constructor", {"module": "pydrnlp.annotations", "name": "Or", "args": [["class", {"module": "builtins", "name": "str", "string": "<class 'str'>"}], ["False"]]}], "kind": "POSITIONAL_OR_KEYWORD", "default": "False"}], "return": false}, "isSpecialAnnotationClass": "special-annotation", "text": ["docstring", "The private class used to implement named annotations.\n\nUse ModuleAnnotationNamer rather than using\n_NamedAnnotation directly."]}]}]]
